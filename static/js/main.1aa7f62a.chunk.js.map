{"version":3,"sources":["components/SearchList.js","actions/index.js","components/Search.js","components/Bar.js","components/GenerateList.js","components/Radiar.js","App.js","serviceWorker.js","reducers/select.js","reducers/index.js","index.js"],"names":["SearchList","handleButtonClick","e","d","props","dispatch","type","payload","data","this","isLoaded","error","List","Item","Content","Header","className","searchResults","results","response","lists","map","i","key","Grid","verticalAlign","divided","Row","columns","Column","width","Button","onClick","image","url","Image","src","size","as","name","Description","biography","aliases","relaxed","Component","connect","state","heros","selectHero","API_URL","API_token","Search","getHero","axios","get","query","then","setState","console","log","catch","handleInputChange","search","value","length","handleClose","placeholder","ref","input","onChange","onBlur","handleLoseFocus","selectReducer","bindActionCreators","BarChart","handleHover","target","classList","add","handleOut","remove","selected","powerstats","category","property","push","parseInt","colorPlate","x","scaleBand","range","y","scaleLinear","chartHeight","domain","max","rects","Popup","style","opacity","position","trigger","bandwidth","height","fill","fillOpacity","strokeWidth","stroke","onMouseOver","bind","onMouseOut","version","xmlns","viewBox","GenerateList","selectList","select","avatar","Bar","RadarChart","radiar","scale","lineWidth","cx","cy","r","polarToX","angle","distance","Math","cos","PI","polarToY","sin","pathDefinition","points","toFixed","groups","scales","middleOfChart","captions","Object","keys","all","col","point","join","chartData","intelligence","strength","speed","durability","power","combat","shape","chartSize","dy","fontWeight","textshadow","transform","App","Radiar","Boolean","window","location","hostname","match","initialState","action","concat","rootReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1aa7f62a.chunk.js","sourcesContent":["import React, {Component} from 'react' \nimport { connect } from 'react-redux'\nimport './style.css'\nimport { List, Image, Button, Grid } from 'semantic-ui-react'\n\nclass SearchList extends Component{\n\n    // Dispatch action to reducer, to get new state and make it accessible to other components\n    handleButtonClick = (e, d) => {\n        this.props.dispatch({\n            type: \"SELECT_HERO\",\n            payload: d.data\n        })\n    }\n\n    render() {\n        \n        if (!this.props.isLoaded) {\n            // If API isn't loaded (that might due to HTTP request failure or no query params), don't render anything\n            return null\n        } else {\n            if (this.props.error) {\n                return (\n                        <List.Item>\n                            <List.Content>\n                            <List.Header className = \"error\">Eh-oh, bad request</List.Header>\n                            </List.Content>\n                        </List.Item>\n                )\n             // If there's no error, render hero result list \n            }else {\n                let searchResults = this.props.results\n                // If there's no error, and return result, render the result list\n                if (searchResults.response === \"success\") {\n                    const lists = searchResults.results.map( (d,i) => {\n                        return(\n                            <List.Item className=\"searchItem\" key ={`listItems-${i}`}>\n                            <Grid verticalAlign='middle' divided='vertically'>\n                                <Grid.Row columns={2}>\n                                <Grid.Column width={5}>\n                                    <Button onClick = {this.handleButtonClick} data = {d}>Select</Button>\n                                    { d.image.url ? <Image className=\"profile\" src={ d.image.url } size=\"small\"/> : ''}\n                                </Grid.Column>\n                                <Grid.Column width={9}>\n                                    <List.Header className=\"listHeader\" as='a'> { d.name } </List.Header>\n                                    <Grid divided='vertically'>\n                                        <List.Description as='a'> \"{ d.biography.aliases }\" </List.Description>\n\n                                    </Grid>\n                                </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                            </List.Item>\n                        \n                        )\n                    })\n                    return (\n                        <List divided relaxed className = \"searchLists\">\n                        {lists}\n                        \n                        </List>\n                    )\n                // If there's no error, but didn't return any result\n                }else if(searchResults.response === \"error\") {\n                    return (\n                        <List.Item>\n                            <List.Content>\n                            <List.Header className = \"error\">Eh-oh, no results</List.Header>\n                            </List.Content>\n                        </List.Item>\n                    )  \n                }\n            }\n        }\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        heros: state.heros\n    }\n}\n\n\nexport default connect(mapStateToProps) (SearchList)\n\n","export const selectHero = (payload) => {\n    return {\n        type: \"SELECT_HERO\",\n        payload: payload\n    }\n};","import React, { Component } from 'react' \nimport axios from 'axios'\nimport SearchLists from './SearchList'\nimport './style.css'\nimport {bindActionCreators} from 'redux'\nimport { connect } from 'react-redux'\nimport { selectHero } from '../actions'\nimport { Button } from 'semantic-ui-react'\n\n// Config API\nconst API_URL = \"https://superheroapi.com/api\"\nconst API_token = \"212252059775751\"\n\nclass Search extends Component{\n    constructor(props) {\n        super(props)\n        // Initiate state\n        this.state = {\n            query: '',\n            results:[],\n            error: false,\n            isLoaded: false \n        }\n\n    }\n\n    // Make API call according to user input and throw error it fail\n    getHero = () => {\n        axios.get(`${API_URL}/${API_token}/search/${this.state.query}`)\n            .then( (data) => {\n                this.setState({\n                    results: data.data,\n                    isLoaded: true\n                })\n                console.log(data.data)\n            })\n            .catch(() => this.setState({ error: true }))\n    }\n\n    // Handle user input and make API call function\n    handleInputChange = () => {\n            this.setState({\n                query: this.search.value\n            }\n            , () => {\n                if (this.state.query && this.state.query.length > 0) {\n                    //show drop down list\n                    this.getHero()\n\n                } else {\n                    //hide drop down list \n                    this.setState({isLoaded: false})\n                }\n            }) \n    }\n    \n    // Enable user to close the search list\n    handleClose = () => {\n        this.setState({isLoaded: false})\n    }\n\n    render() {\n        \n        // Return search list with API call results\n        return (\n            <div className = \"searchBox\">\n                <input\n                    className = \"input\"\n                    placeholder = \"Search for super hero name\"\n                    ref = {input =>  this.search= input}\n                    onChange = {this.handleInputChange}\n                    onBlur = {this.handleLoseFocus}\n                />\n            { this.state.isLoaded ? <Button className=\"close\" onClick = {this.handleClose}> X  Close Search List </Button> : ''}   \n            { this.state.isLoaded ? <SearchLists results={this.state.results} isLoaded={this.state.isLoaded} error={this.state.error} /> : '' }\n            </div>\n        )\n    }\n}\n\n// Config Redux connection\nfunction mapStateToProps(state) {\n    return {\n        selectReducer: state.selectReducer\n    }\n}\n\nfunction matchDispatchToProps(dispatch) {\n    return bindActionCreators({ selectHero: selectHero}, dispatch)\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Search)","import React, {Component} from 'react' \nimport {  scaleBand,\n          scaleLinear,\n          max } from 'd3'\nimport './style.css'\nimport { Popup } from 'semantic-ui-react'\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    //Add class when hover to hightlight DOM element\n    handleHover = (data, e) => {\n        e.target.classList.add('hovered')\n    }\n\n    handleOut = (data, e) => {\n        e.target.classList.remove('hovered')\n    }\n\n    render () {\n        // Receive data from GenerateList and process data for vis\n        const selected = this.props.data.powerstats\n        const data = []\n        const category = ['Intelligence', 'Strength', 'Speed', 'Durability', 'Power', 'Combat']\n        for (let property in selected) {\n            data.push( parseInt(selected[property], 10) )\n        }\n\n        // Config bar chart SVG settings\n        const chartWidth = 300, chartHeight = 150;\n        const padding = 10\n        const colorPlate = [\"#edc951\", \"#BD3745\", \"#1E9BA3\", \"#853660\", \"#6EAB20\", \"#EC5512\"]\n        const x_w = (chartWidth - 5* padding) /6\n        var x = scaleBand().range([0, chartWidth])\n        var y = scaleLinear().range([chartHeight - padding * 2, 0])\n\n        // Scale the range of the data in the domains\n        x.domain(category)\n        y.domain([0, max(data)]);\n        \n        // Return rects with map function\n        const rects = data.map((d, i) => {\n            return (\n            <Popup\n            key = {`popover-${i}`}\n            style = { {opacity : 0.75} }\n            position = 'top left'\n            trigger = {\n            <rect \n                x = { x_w * i}\n                y = { y(d) }\n                width = { x.bandwidth() -20 }\n                height = { chartHeight - y(d)}\n                fill= { i < 6 ? colorPlate[i] : '#edc951' }\n                fillOpacity=\".3\"\n                strokeWidth = \"1.6\"\n                stroke = { i < 6 ? colorPlate[i] : '#edc951' }\n                onMouseOver = {this.handleHover.bind(this, data)}\n                onMouseOut = {this.handleOut.bind(this, data)}\n            />\n            }\n            >\n            <Popup.Content>\n            { category[i] }: {d}\n            </Popup.Content>\n            </Popup>\n            )\n        })\n\n        // Draw SVG\n        return (\n            <div>\n            <svg \n                version=\"1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={chartWidth}\n                height={chartHeight}\n                viewBox={`0 0 ${chartWidth} ${chartHeight}`}\n            >\n            <g>{rects}</g>   \n            </svg>\n            </div>\n        )\n    }\n}\n\n\n\nexport default BarChart;","import React, {Component} from 'react'\nimport { connect } from \"react-redux\";\nimport { Grid, Image} from 'semantic-ui-react'\nimport BarChart from './Bar'\n\nclass GenerateList extends Component {\n\n    render () {\n        let selectList = null\n\n        // Render Hero profile according to user selection\n        if(this.props.select.length !== 0) {\n            const data = this.props.select.heros\n            selectList =  data.map((d, i) => {\n                return (\n                <Grid key = {`basic-${i}`}columns={3} divided verticalAlign='middle'>\n                    <Grid.Column>\n                        <Image src= {d.image.url} size=\"small\" avatar/>\n                        <p className = \"listName\" key={`seleted-${i}`}>{ d.name }</p>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <BarChart data= {d}/>\n                    </Grid.Column>\n                </Grid>\n                )\n            })\n        }\n        return (\n            <div className=\"generateList\">\n                <h2 className=\"generateListTitle\">Generated List</h2>\n                {selectList}\n            </div>\n        )\n    }\n}\n\n// Map state from Redux store to props\nfunction mapStateToProps(state) {\n    return {\n        select: state.heros\n    }\n}\n\nexport default connect(mapStateToProps)(GenerateList)","import React, {Component} from 'react' \nimport { connect } from \"react-redux\";\nimport './style.css'\nimport { Popup } from 'semantic-ui-react'\n\n\nclass RadarChart extends Component {\n    constructor(props) {\n    super(props);\n    }\n\n    //Add class when hover to hightlight DOM element\n    handleHover = (data, e) => {\n        e.target.classList.add('hovered')\n    }\n\n    handleOut = (data, e) => {\n        e.target.classList.remove('hovered')\n    }\n\n    render () {\n        \n        // Receive data from GenerateList and process data for vis\n        let data = this.props.radiar.heros.map((d) => {\n            return d.powerstats\n        })\n\n        // Config bar chart SVG settings\n        const chartSize = 560;\n        const numberOfScales = 4;\n        const padding = 10\n        const colorPlate = [\"#edc951\", \"#BD3745\", \"#1E9BA3\", \"#853660\", \"#6EAB20\", \"#EC5512\"]\n        const scale = value => {\n\n        // Apply different width to circle axis \n        let lineWidth = null\n        switch(value) {\n            case 4:\n                lineWidth = 1\n                break;\n            default:\n                lineWidth = 0.2 \n        }\n\n        // Return multiple circle as radiar axis \n        return (\n        <circle\n            key={`scale-${value}`}\n            cx={0}\n            cy={0}\n            r={((value / numberOfScales) * (chartSize-padding)) / 2}\n            stroke=\"#eee\"\n            fill=\"transparent\"\n            strokeWidth={lineWidth}\n        />\n        )\n\n        };\n\n        // Calculate position with angle and axis\n        const polarToX = (angle, distance) => Math.cos(angle - Math.PI / 2) * distance;\n        const polarToY = (angle, distance) => Math.sin(angle - Math.PI / 2) * distance;\n\n        // Return path function for hexagon\n        const pathDefinition = points => {\n        let d = 'M' + points[0][0].toFixed(4) + ',' + points[0][1].toFixed(4);\n        for (let i = 1; i < points.length; i++) {\n            d += 'L' + points[i][0].toFixed(4) + ',' + points[i][1].toFixed(4);\n        }\n        return d + 'z';\n        };\n\n        //Draw shape and map pop up \n        const shape = columns => (chartData, i) => {\n        const data = chartData;\n\n        return (\n            <Popup\n                key = {`popover-${i}`}\n                style = { {opacity : 0.75} }\n                position = 'top left'\n                trigger = {\n                <path\n            key={`shape-${i}`}\n            d={pathDefinition(\n                columns.map(col => {\n                const value = data[col.key]/ 100;\n                return [\n                    polarToX(col.angle, (value * (chartSize-padding)) / 2),\n                    polarToY(col.angle, (value * (chartSize-padding)) / 2)\n                ];\n                })\n            )}\n            stroke={ i < 6 ? colorPlate[i] : '#edc951' }\n            strokeWidth = \"3.2\"\n            fill= { i < 6 ? colorPlate[i] : '#edc951' }\n            fillOpacity=\".3\"\n            onMouseOver = {this.handleHover.bind(this, data)}\n            onMouseOut = {this.handleOut.bind(this, data)}\n            data = {data}\n            />\n            } \n            >\n            <Popup.Header>Power Stats</Popup.Header>\n            <Popup.Content>\n                <p>Intelligence: {data.intelligence}, Strength: {data.strength}, Speed: {data.speed}, Durability: {data.durability}, Power: {data.power}, Combat: {data.combat}</p>\n            </Popup.Content>\n        </Popup>\n\n        );\n        };\n\n        // Draw axis\n        const points = points => {\n        return points\n            .map(point => point[0].toFixed(4) + ',' + point[1].toFixed(4))\n            .join(' ');\n        };\n        const axis = () => (col, i) => (\n        <polyline\n            key={`poly-axis-${i}`}\n            points={points([\n            [0, 0],\n            [polarToX(col.angle, (chartSize-padding) / 2), polarToY(col.angle, (chartSize-padding) / 2)]\n            ])}\n            stroke=\"#555\"\n            strokeWidth=\"0.5\"\n        />\n        );\n\n    const groups = [];\n    const scales = [];\n    for (let i = numberOfScales; i > 0; i--) {\n        scales.push(scale(i));\n    }\n\n    const middleOfChart = (chartSize / 2).toFixed(4);\n\n    let captions = null\n    if (data.length !== 0) {\n    captions = Object.keys(data[0]);\n    }\n\n    let columns = null \n    if (captions) {\n    columns = captions.map((key, i, all) => {\n        return {\n            key,\n            angle: (Math.PI * 2 * i) / all.length\n        };\n        });\n    }\n\n    //Draw text caption\n    const caption = () => col => (\n        <text\n            key={`caption-of-${col.key}`}\n            x={polarToX(col.angle, (chartSize / 2) * 0.95 - padding*1.35).toFixed(4)}\n            y={polarToY(col.angle, (chartSize / 2) * 0.95).toFixed(4)}\n            dy={10 / 2}\n            fill=\"#fff\"\n            fontWeight=\"400\"\n            textshadow=\"1px 1px 0 #fff\"\n        >\n            {col.key}\n        </text>\n        );\n    // Conditional render hexagon according to props ( state) data \n    if (columns) {\n        groups.push(<g key={`scales`}>{scales}</g>);\n        groups.push(<g key={`group-axes`}>{columns.map(axis())}</g>);\n        groups.push(<g key={`groups}`}>{data.map(shape(columns))}</g>);\n        groups.push(<g key={`group-captions`}>{columns.map(caption())}</g>);\n    }else {\n        groups.push(<g key={`scales`}>{scales}</g>);\n    }\n\n    // Draw SVG element\n    return (\n        <div className = \"visWrapper\">\n        <svg\n            version=\"1\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={chartSize}\n            height={chartSize}\n            viewBox={`0 0 ${chartSize} ${chartSize}`}\n        >\n            <g transform={`translate(${middleOfChart},${middleOfChart})`}>{groups}</g>\n        </svg>\n        </div>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    return {\n        radiar: state.heros\n    }\n}\n\nexport default connect(mapStateToProps)(RadarChart);","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css'\nimport Search from './components/Search'\nimport GenerateList from './components/GenerateList'\nimport Radiar from './components/Radiar'\nimport { Grid } from 'semantic-ui-react'\n\nclass App extends Component {\n\n  render () {\n\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h1>Super Hero Combat!</h1>\n        </div>\n\n        <Grid divided='vertically' >\n          <Grid.Row columns={2} >\n          <Grid.Column divided='horizontal'>\n            <Search /> \n            <GenerateList />\n          </Grid.Column> \n          <Grid.Column>\n            <Radiar />\n          </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nconst initialState = {\n    heros: []\n}\nconst selectReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case \"SELECT_HERO\":\n            return {\n                ...state,\n                heros: state.heros.concat(action.payload)\n            }\n        default: \n            return state\n    }\n}\n\nexport default selectReducer  "," import selectReducer from './select';\n import {combineReducers} from 'redux'\n\n const rootReducer = combineReducers({\n     heros : selectReducer\n })\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux';\nimport rootReducer from './reducers'\nimport { Provider } from 'react-redux'\n\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\ndocument.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}